[28-Jul-2025 04:07:10 UTC] Data pengeluaran ID: 9092 berhasil dihapus oleh karyawan: 2024060001
[28-Jul-2025 11:08:29 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:08:29 Asia/Jakarta] Tab: terima
[28-Jul-2025 11:08:29 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:08:29 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:08:29 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:08:57 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:08:57 Asia/Jakarta] Tab: terima
[28-Jul-2025 11:08:57 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:08:57 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:08:57 Asia/Jakarta] Result count: 1
[28-Jul-2025 11:12:27 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:12:27 Asia/Jakarta] Tab: terima
[28-Jul-2025 11:12:27 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:12:27 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:12:27 Asia/Jakarta] Result count: 0
[28-Jul-2025 11:13:08 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:13:08 Asia/Jakarta] Tab: terima
[28-Jul-2025 11:13:08 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:13:08 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:13:08 Asia/Jakarta] Result count: 0
[28-Jul-2025 11:14:09 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:14:09 Asia/Jakarta] Tab: terima
[28-Jul-2025 11:14:09 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:14:09 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:14:09 Asia/Jakarta] Result count: 0
[28-Jul-2025 11:14:12 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:14:12 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:14:12 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:14:12 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:14:12 Asia/Jakarta] Result count: 8
[28-Jul-2025 11:14:51 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:14:51 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:14:51 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:14:51 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:14:51 Asia/Jakarta] Result count: 8
[28-Jul-2025 11:14:54 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:14:54 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:14:54 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:14:54 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:14:54 Asia/Jakarta] Result count: 7
[28-Jul-2025 11:15:41 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:15:41 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:15:41 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:15:41 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:15:41 Asia/Jakarta] Result count: 7
[28-Jul-2025 11:15:44 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:15:44 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:15:44 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:15:44 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:15:44 Asia/Jakarta] Result count: 6
[28-Jul-2025 11:17:54 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:17:54 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:17:54 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:17:54 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:17:54 Asia/Jakarta] Result count: 6
[28-Jul-2025 11:17:58 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:17:58 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:17:58 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:17:58 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:17:58 Asia/Jakarta] Result count: 5
[28-Jul-2025 11:18:04 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:18:04 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:18:04 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:18:04 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:18:04 Asia/Jakarta] Result count: 5
[28-Jul-2025 11:18:36 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:18:36 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:18:36 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:18:36 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:18:36 Asia/Jakarta] Result count: 4
[28-Jul-2025 11:19:10 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:19:10 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 11:19:10 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:19:10 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:19:10 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:19:10 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:19:10 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 11:19:10 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:19:10 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:19:10 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:19:13 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:19:13 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 11:19:13 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:19:13 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:19:13 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:19:35 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:19:35 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 11:19:35 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:19:35 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:19:35 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:19:42 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:19:42 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 11:19:42 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:19:42 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:19:42 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:19:47 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:19:47 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 11:19:47 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:19:47 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:19:47 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:20:10 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:20:10 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 11:20:10 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:20:10 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:20:10 Asia/Jakarta] Result count: 0
[28-Jul-2025 11:21:39 Asia/Jakarta] Rekening filter: 1
[28-Jul-2025 11:21:39 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 11:21:39 Asia/Jakarta] Adding rekening filter with ID: 1
[28-Jul-2025 11:21:39 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:21:39 Asia/Jakarta] Params: Array
(
    [0] => 1
)

[28-Jul-2025 11:21:39 Asia/Jakarta] Result count: 0
[28-Jul-2025 11:21:45 Asia/Jakarta] Rekening filter: 1
[28-Jul-2025 11:21:45 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 11:21:45 Asia/Jakarta] Adding rekening filter with ID: 1
[28-Jul-2025 11:21:45 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:21:45 Asia/Jakarta] Params: Array
(
    [0] => 1
)

[28-Jul-2025 11:21:45 Asia/Jakarta] Result count: 0
[28-Jul-2025 11:21:55 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:21:55 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:21:55 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:21:55 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:21:55 Asia/Jakarta] Result count: 4
[28-Jul-2025 11:26:18 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:26:18 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:26:18 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:26:18 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:26:18 Asia/Jakarta] Result count: 4
[28-Jul-2025 11:26:21 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:26:21 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:26:21 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:26:21 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:26:21 Asia/Jakarta] Result count: 3
[28-Jul-2025 11:26:25 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:26:25 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:26:25 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:26:25 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:26:25 Asia/Jakarta] Result count: 3
[28-Jul-2025 11:26:28 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:26:28 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:26:28 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:26:28 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:26:28 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:33:37 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:33:37 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:33:37 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:33:37 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:33:37 Asia/Jakarta] Result count: 2
[28-Jul-2025 11:33:39 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:33:39 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:33:39 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:33:39 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:33:39 Asia/Jakarta] Result count: 1
[28-Jul-2025 11:33:41 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:33:41 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:33:41 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:33:41 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:33:41 Asia/Jakarta] Result count: 1
[28-Jul-2025 11:33:43 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:33:43 Asia/Jakarta] Tab: validasi
[28-Jul-2025 11:33:43 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 11:33:43 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:33:43 Asia/Jakarta] Result count: 0
[28-Jul-2025 11:33:47 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 11:33:47 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 11:33:47 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 11:33:47 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 11:33:47 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:22:13 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:22:13 Asia/Jakarta] Tab: terima
[28-Jul-2025 14:22:13 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:22:13 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:22:13 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:22:22 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:22:22 Asia/Jakarta] Tab: terima
[28-Jul-2025 14:22:22 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:22:22 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:22:22 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:22:55 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:22:55 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:22:55 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:22:55 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:22:55 Asia/Jakarta] Result count: 4
[28-Jul-2025 14:29:58 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:29:58 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:29:58 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:29:58 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:29:58 Asia/Jakarta] Result count: 4
[28-Jul-2025 14:30:00 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:30:00 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:30:00 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:30:00 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:30:00 Asia/Jakarta] Result count: 3
[28-Jul-2025 14:30:03 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:30:03 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:30:03 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:30:03 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:30:03 Asia/Jakarta] Result count: 3
[28-Jul-2025 14:30:06 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:30:06 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:30:06 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:30:06 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:30:06 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:30:08 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:30:08 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:30:08 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:30:08 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:30:08 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:30:10 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:30:10 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:30:10 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:30:10 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:30:10 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:30:20 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:30:20 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:30:20 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:30:20 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:30:20 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:30:23 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:30:23 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:30:23 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:30:23 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:30:23 Asia/Jakarta] Result count: 0
[28-Jul-2025 14:31:07 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:31:07 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 14:31:07 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:31:07 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:31:07 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:31:20 Asia/Jakarta] Rekening filter: 11
[28-Jul-2025 14:31:20 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 14:31:20 Asia/Jakarta] Adding rekening filter with ID: 11
[28-Jul-2025 14:31:20 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:31:20 Asia/Jakarta] Params: Array
(
    [0] => 11
)

[28-Jul-2025 14:31:20 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:35:54 Asia/Jakarta] Rekening filter: 11
[28-Jul-2025 14:35:54 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 14:35:54 Asia/Jakarta] Adding rekening filter with ID: 11
[28-Jul-2025 14:35:54 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:35:54 Asia/Jakarta] Params: Array
(
    [0] => 11
)

[28-Jul-2025 14:35:54 Asia/Jakarta] Result count: 0
[28-Jul-2025 14:36:07 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:36:07 Asia/Jakarta] Tab: terima
[28-Jul-2025 14:36:07 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:36:07 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:36:07 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:36:13 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:36:13 Asia/Jakarta] Tab: terima
[28-Jul-2025 14:36:13 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:36:13 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:36:13 Asia/Jakarta] Result count: 0
[28-Jul-2025 14:37:09 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:37:09 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:37:09 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:37:09 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:37:09 Asia/Jakarta] Result count: 4
[28-Jul-2025 14:37:23 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:37:23 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 14:37:23 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:37:23 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:37:23 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:42:29 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:42:29 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:42:29 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:42:29 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:42:29 Asia/Jakarta] Result count: 4
[28-Jul-2025 14:42:41 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:42:41 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:42:41 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:42:41 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:42:41 Asia/Jakarta] Result count: 4
[28-Jul-2025 14:42:43 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:42:43 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:42:43 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:42:43 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:42:43 Asia/Jakarta] Result count: 3
[28-Jul-2025 14:44:24 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:44:24 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:44:24 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:44:24 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:44:24 Asia/Jakarta] Result count: 3
[28-Jul-2025 14:44:27 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:44:27 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:44:27 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:44:27 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:44:27 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:45:40 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:45:40 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:45:40 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:45:40 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:45:40 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:45:42 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:45:42 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:45:42 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:45:42 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:45:42 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:46:03 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:46:03 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:46:03 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:46:03 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:46:03 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:46:05 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:46:05 Asia/Jakarta] Tab: validasi
[28-Jul-2025 14:46:05 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 14:46:05 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:46:05 Asia/Jakarta] Result count: 0
[28-Jul-2025 14:46:08 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 14:46:08 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 14:46:08 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:46:08 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 14:46:08 Asia/Jakarta] Result count: 2
[28-Jul-2025 14:46:22 Asia/Jakarta] Rekening filter: 3
[28-Jul-2025 14:46:22 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 14:46:22 Asia/Jakarta] Adding rekening filter with ID: 3
[28-Jul-2025 14:46:22 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:46:22 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[28-Jul-2025 14:46:22 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:46:25 Asia/Jakarta] Rekening filter: 3
[28-Jul-2025 14:46:25 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 14:46:25 Asia/Jakarta] Adding rekening filter with ID: 3
[28-Jul-2025 14:46:25 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:46:25 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[28-Jul-2025 14:46:25 Asia/Jakarta] Result count: 1
[28-Jul-2025 14:49:48 Asia/Jakarta] Rekening filter: 3
[28-Jul-2025 14:49:48 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 14:49:48 Asia/Jakarta] Adding rekening filter with ID: 3
[28-Jul-2025 14:49:48 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 14:49:48 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[28-Jul-2025 14:49:48 Asia/Jakarta] Result count: 0
[28-Jul-2025 15:07:33 Asia/Jakarta] Rekening filter: 3
[28-Jul-2025 15:07:33 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 15:07:33 Asia/Jakarta] Adding rekening filter with ID: 3
[28-Jul-2025 15:07:33 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 15:07:33 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[28-Jul-2025 15:07:33 Asia/Jakarta] Result count: 0
[28-Jul-2025 15:07:43 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 15:07:43 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 15:07:43 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 15:07:43 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 15:07:43 Asia/Jakarta] Result count: 2
[28-Jul-2025 08:27:00 UTC] Data pengeluaran ID: 9094 berhasil dihapus oleh karyawan: 2024060001
[28-Jul-2025 15:41:12 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[28-Jul-2025 15:41:21 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[28-Jul-2025 15:41:21 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[28-Jul-2025 15:43:00 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[28-Jul-2025 15:43:00 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: before_transaction_insert, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[28-Jul-2025 15:43:00 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: transaction_inserted_successfully, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[28-Jul-2025 15:44:36 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 15:44:36 Asia/Jakarta] Tab: terima
[28-Jul-2025 15:44:36 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 15:44:36 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 15:44:36 Asia/Jakarta] Result count: 0
[28-Jul-2025 15:44:39 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 15:44:39 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 15:44:39 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 15:44:39 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 15:44:39 Asia/Jakarta] Result count: 2
[28-Jul-2025 15:53:27 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 15:53:27 Asia/Jakarta] Tab: setor_bank
[28-Jul-2025 15:53:27 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[28-Jul-2025 15:53:27 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 15:53:27 Asia/Jakarta] Result count: 1
[28-Jul-2025 15:53:39 Asia/Jakarta] Rekening filter: all
[28-Jul-2025 15:53:39 Asia/Jakarta] Tab: validasi_selisih
[28-Jul-2025 15:53:39 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[28-Jul-2025 15:53:39 Asia/Jakarta] Params: Array
(
)

[28-Jul-2025 15:53:39 Asia/Jakarta] Result count: 2
[28-Jul-2025 16:11:38 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[28-Jul-2025 16:12:19 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[28-Jul-2025 16:12:19 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[28-Jul-2025 16:13:16 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[28-Jul-2025 16:13:16 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: before_transaction_insert, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[28-Jul-2025 16:13:17 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: transaction_inserted_successfully, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[28-Jul-2025 16:29:16 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[28-Jul-2025 16:29:21 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[28-Jul-2025 16:29:21 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[28-Jul-2025 16:29:50 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[28-Jul-2025 16:29:50 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[28-Jul-2025 16:30:29 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[28-Jul-2025 16:30:29 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: before_transaction_insert, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[28-Jul-2025 16:30:29 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: transaction_inserted_successfully, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[28-Jul-2025 16:33:33 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[28-Jul-2025 16:33:45 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[28-Jul-2025 16:33:45 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[28-Jul-2025 16:34:33 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[28-Jul-2025 16:34:33 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: before_transaction_insert, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[28-Jul-2025 16:34:34 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: transaction_inserted_successfully, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[29-Jul-2025 02:02:50 UTC] Data pengeluaran ID: 9133 berhasil dihapus oleh karyawan: 2023080001 dari edit_pengeluaran1
[29-Jul-2025 09:34:45 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:34:45 Asia/Jakarta] Tab: terima
[29-Jul-2025 09:34:45 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 09:34:45 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:34:45 Asia/Jakarta] Result count: 0
[29-Jul-2025 09:34:46 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:34:46 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:34:46 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:34:46 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:34:46 Asia/Jakarta] Result count: 9
[29-Jul-2025 09:34:59 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:34:59 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:34:59 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 AND sb.tanggal_setoran BETWEEN ? AND ? GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:34:59 Asia/Jakarta] Params: Array
(
    [0] => 2025-07-28
    [1] => 2025-07-28
)

[29-Jul-2025 09:34:59 Asia/Jakarta] Result count: 2
[29-Jul-2025 09:35:04 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:35:04 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:35:04 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:35:04 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:35:04 Asia/Jakarta] Result count: 9
[29-Jul-2025 09:35:07 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:35:07 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:35:07 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:35:07 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:35:07 Asia/Jakarta] Result count: 9
[29-Jul-2025 09:36:12 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:36:12 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:36:12 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:36:12 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:36:12 Asia/Jakarta] Result count: 9
[29-Jul-2025 09:36:21 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:36:21 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:36:21 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 AND sb.tanggal_setoran BETWEEN ? AND ? GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:36:21 Asia/Jakarta] Params: Array
(
    [0] => 2025-07-28
    [1] => 2025-07-28
)

[29-Jul-2025 09:36:21 Asia/Jakarta] Result count: 2
[29-Jul-2025 09:36:27 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:36:27 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:36:27 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:36:27 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:36:27 Asia/Jakarta] Result count: 9
[29-Jul-2025 09:36:30 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:36:30 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:36:30 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:36:30 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:36:30 Asia/Jakarta] Result count: 9
[29-Jul-2025 09:37:20 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:37:20 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:37:20 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:37:20 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:37:20 Asia/Jakarta] Result count: 9
[29-Jul-2025 09:37:28 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:37:28 Asia/Jakarta] Tab: terima
[29-Jul-2025 09:37:28 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 09:37:28 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:37:28 Asia/Jakarta] Result count: 0
[29-Jul-2025 09:37:31 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:37:31 Asia/Jakarta] Tab: setor_bank
[29-Jul-2025 09:37:31 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 09:37:31 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:37:31 Asia/Jakarta] Result count: 1
[29-Jul-2025 09:37:45 Asia/Jakarta] Rekening filter: 4
[29-Jul-2025 09:37:45 Asia/Jakarta] Tab: setor_bank
[29-Jul-2025 09:37:45 Asia/Jakarta] Adding rekening filter with ID: 4
[29-Jul-2025 09:37:45 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 09:37:45 Asia/Jakarta] Params: Array
(
    [0] => 4
)

[29-Jul-2025 09:37:45 Asia/Jakarta] Result count: 1
[29-Jul-2025 09:37:50 Asia/Jakarta] Rekening filter: 4
[29-Jul-2025 09:37:50 Asia/Jakarta] Tab: setor_bank
[29-Jul-2025 09:37:50 Asia/Jakarta] Adding rekening filter with ID: 4
[29-Jul-2025 09:37:50 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') AND sk.nama_cabang = ? ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 09:37:50 Asia/Jakarta] Params: Array
(
    [0] => 4
    [1] => FIT MOTOR TRAYEMAN
)

[29-Jul-2025 09:37:50 Asia/Jakarta] Result count: 1
[29-Jul-2025 09:45:59 Asia/Jakarta] Rekening filter: 4
[29-Jul-2025 09:45:59 Asia/Jakarta] Tab: setor_bank
[29-Jul-2025 09:45:59 Asia/Jakarta] Adding rekening filter with ID: 4
[29-Jul-2025 09:45:59 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 09:45:59 Asia/Jakarta] Params: Array
(
    [0] => 4
)

[29-Jul-2025 09:45:59 Asia/Jakarta] Result count: 0
[29-Jul-2025 09:51:23 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:51:23 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:51:23 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:51:23 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:51:23 Asia/Jakarta] Result count: 10
[29-Jul-2025 09:51:35 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:51:35 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:51:35 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 AND sb.tanggal_setoran BETWEEN ? AND ? AND c.nama_cabang = ? GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:51:35 Asia/Jakarta] Params: Array
(
    [0] => 2025-07-29
    [1] => 2025-07-29
    [2] => FIT MOTOR TRAYEMAN
)

[29-Jul-2025 09:51:35 Asia/Jakarta] Result count: 1
[29-Jul-2025 09:51:37 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:51:37 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:51:37 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:51:37 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:51:37 Asia/Jakarta] Result count: 10
[29-Jul-2025 09:51:41 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:51:41 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 09:51:41 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 09:51:41 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:51:41 Asia/Jakarta] Result count: 10
[29-Jul-2025 09:51:56 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:51:56 Asia/Jakarta] Tab: terima
[29-Jul-2025 09:51:56 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 09:51:56 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:51:56 Asia/Jakarta] Result count: 0
[29-Jul-2025 09:52:11 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 09:52:11 Asia/Jakarta] Tab: validasi_selisih
[29-Jul-2025 09:52:12 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[29-Jul-2025 09:52:12 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 09:52:12 Asia/Jakarta] Result count: 2
[29-Jul-2025 10:06:05 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 10:06:05 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 10:06:06 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 10:06:06 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 10:06:06 Asia/Jakarta] Result count: 10
[29-Jul-2025 10:06:18 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 10:06:18 Asia/Jakarta] Tab: bank_history
[29-Jul-2025 10:06:18 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[29-Jul-2025 10:06:18 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 10:06:18 Asia/Jakarta] Result count: 10
[29-Jul-2025 10:08:58 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 10:08:58 Asia/Jakarta] Tab: terima
[29-Jul-2025 10:08:58 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 10:08:58 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 10:08:58 Asia/Jakarta] Result count: 0
[29-Jul-2025 10:09:03 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 10:09:03 Asia/Jakarta] Tab: validasi_selisih
[29-Jul-2025 10:09:04 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[29-Jul-2025 10:09:04 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 10:09:04 Asia/Jakarta] Result count: 2
[29-Jul-2025 10:10:58 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 10:10:58 Asia/Jakarta] Tab: terima
[29-Jul-2025 10:10:58 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[29-Jul-2025 10:10:58 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 10:10:58 Asia/Jakarta] Result count: 0
[29-Jul-2025 10:11:00 Asia/Jakarta] Rekening filter: all
[29-Jul-2025 10:11:00 Asia/Jakarta] Tab: validasi_selisih
[29-Jul-2025 10:11:00 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[29-Jul-2025 10:11:00 Asia/Jakarta] Params: Array
(
)

[29-Jul-2025 10:11:00 Asia/Jakarta] Result count: 2
[29-Jul-2025 08:09:48 UTC] Data pengeluaran ID: 9138 berhasil dihapus oleh karyawan: 2024060001 dari edit_pengeluaran1
[29-Jul-2025 15:11:53 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[29-Jul-2025 15:12:05 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[29-Jul-2025 15:12:05 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[29-Jul-2025 15:13:28 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[29-Jul-2025 15:13:28 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: before_transaction_insert, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[29-Jul-2025 15:13:28 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: transaction_inserted_successfully, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[29-Jul-2025 16:10:57 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[29-Jul-2025 16:11:03 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[29-Jul-2025 16:11:03 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[29-Jul-2025 16:11:32 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[29-Jul-2025 16:11:32 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: before_transaction_insert, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[29-Jul-2025 16:11:32 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: transaction_inserted_successfully, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[30-Jul-2025 03:17:56 UTC] PHP Parse error:  syntax error, unexpected end of file, expecting "elseif" or "else" or "endif" in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 1557
[30-Jul-2025 03:17:58 UTC] PHP Parse error:  syntax error, unexpected end of file, expecting "elseif" or "else" or "endif" in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 1557
[30-Jul-2025 03:17:58 UTC] PHP Parse error:  syntax error, unexpected end of file, expecting "elseif" or "else" or "endif" in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 1557
[30-Jul-2025 03:17:59 UTC] PHP Parse error:  syntax error, unexpected end of file, expecting "elseif" or "else" or "endif" in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 1557
[30-Jul-2025 03:17:59 UTC] PHP Parse error:  syntax error, unexpected end of file, expecting "elseif" or "else" or "endif" in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 1557
[30-Jul-2025 03:17:59 UTC] PHP Parse error:  syntax error, unexpected end of file, expecting "elseif" or "else" or "endif" in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 1557
[30-Jul-2025 03:18:03 UTC] PHP Parse error:  syntax error, unexpected end of file, expecting "elseif" or "else" or "endif" in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 1557
[30-Jul-2025 10:28:26 Asia/Jakarta] PHP Fatal error:  Uncaught PDOException: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'kode_transaksi' in 'where clause' in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php:90
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php(90): PDOStatement->execute()
#1 /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php(98): generateTransactionCode()
#2 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/keuangan_pusat.php on line 90
[22-Aug-2025 10:48:16 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1329
[22-Aug-2025 13:31:52 Asia/Jakarta] Rekening filter: all
[22-Aug-2025 13:31:52 Asia/Jakarta] Tab: terima
[22-Aug-2025 13:31:52 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[22-Aug-2025 13:31:52 Asia/Jakarta] Params: Array
(
)

[22-Aug-2025 13:31:52 Asia/Jakarta] Result count: 0
[22-Aug-2025 15:44:05 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[22-Aug-2025 15:44:18 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[22-Aug-2025 15:44:18 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[22-Aug-2025 15:45:29 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[22-Aug-2025 15:45:29 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: before_transaction_insert, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[22-Aug-2025 15:45:29 Asia/Jakarta] Branch Data - Karyawan: 2024060001, Action: transaction_inserted_successfully, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[22-Aug-2025 15:48:19 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[22-Aug-2025 15:48:38 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[22-Aug-2025 15:48:38 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[22-Aug-2025 15:50:36 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[22-Aug-2025 15:50:36 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: before_transaction_insert, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[22-Aug-2025 15:50:36 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: transaction_inserted_successfully, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[22-Aug-2025 15:51:19 Asia/Jakarta] Found 3 available closing transactions for cabang: FIT MOTOR PACUL
[22-Aug-2025 15:52:23 Asia/Jakarta] Found 3 available closing transactions for cabang: FIT MOTOR PACUL
[22-Aug-2025 16:04:28 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[22-Aug-2025 16:04:45 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[22-Aug-2025 16:04:45 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[22-Aug-2025 16:05:30 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[22-Aug-2025 16:05:30 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: before_transaction_insert, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[22-Aug-2025 16:05:30 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: transaction_inserted_successfully, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[22-Aug-2025 16:14:57 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1329
[22-Aug-2025 16:22:47 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[22-Aug-2025 16:23:00 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[22-Aug-2025 16:23:00 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[22-Aug-2025 16:24:46 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[22-Aug-2025 16:24:46 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: before_transaction_insert, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[22-Aug-2025 16:24:46 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: transaction_inserted_successfully, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[23-Aug-2025 08:36:31 Asia/Jakarta] Found 3 available closing transactions for cabang: FIT MOTOR TRAYEMAN
[23-Aug-2025 10:20:11 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:20:11 Asia/Jakarta] Tab: terima
[23-Aug-2025 10:20:12 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:20:12 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:20:12 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:20:14 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:20:14 Asia/Jakarta] Tab: validasi_selisih
[23-Aug-2025 10:20:14 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[23-Aug-2025 10:20:14 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:20:14 Asia/Jakarta] Result count: 3
[23-Aug-2025 10:20:20 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:20:20 Asia/Jakarta] Tab: bank_history
[23-Aug-2025 10:20:20 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[23-Aug-2025 10:20:20 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:20:20 Asia/Jakarta] Result count: 36
[23-Aug-2025 10:20:28 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:20:28 Asia/Jakarta] Tab: bank_history
[23-Aug-2025 10:20:28 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[23-Aug-2025 10:20:28 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:20:28 Asia/Jakarta] Result count: 36
[23-Aug-2025 10:20:31 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:20:31 Asia/Jakarta] Tab: bank_history
[23-Aug-2025 10:20:31 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[23-Aug-2025 10:20:31 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:20:31 Asia/Jakarta] Result count: 36
[23-Aug-2025 10:41:36 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:41:36 Asia/Jakarta] Tab: bank_history
[23-Aug-2025 10:41:36 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[23-Aug-2025 10:41:36 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:41:36 Asia/Jakarta] Result count: 36
[23-Aug-2025 10:41:38 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:41:38 Asia/Jakarta] Tab: bank_history
[23-Aug-2025 10:41:38 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[23-Aug-2025 10:41:38 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:41:38 Asia/Jakarta] Result count: 36
[23-Aug-2025 10:41:41 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:41:41 Asia/Jakarta] Tab: terima
[23-Aug-2025 10:41:41 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:41:41 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:41:41 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:41:43 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:41:43 Asia/Jakarta] Tab: setor_bank
[23-Aug-2025 10:41:43 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:41:43 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:41:43 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:44:10 Asia/Jakarta] Rekening filter: 1
[23-Aug-2025 10:44:10 Asia/Jakarta] Tab: setor_bank
[23-Aug-2025 10:44:10 Asia/Jakarta] Adding rekening filter with ID: 1
[23-Aug-2025 10:44:10 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:44:10 Asia/Jakarta] Params: Array
(
    [0] => 1
)

[23-Aug-2025 10:44:10 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:44:14 Asia/Jakarta] Rekening filter: 11
[23-Aug-2025 10:44:14 Asia/Jakarta] Tab: setor_bank
[23-Aug-2025 10:44:14 Asia/Jakarta] Adding rekening filter with ID: 11
[23-Aug-2025 10:44:14 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang = (SELECT kode_cabang FROM master_rekening_cabang WHERE id = ? AND status = 'active') ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:44:14 Asia/Jakarta] Params: Array
(
    [0] => 11
)

[23-Aug-2025 10:44:14 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:56:19 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:56:19 Asia/Jakarta] Tab: terima
[23-Aug-2025 10:56:19 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:56:19 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:56:19 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:56:24 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:56:24 Asia/Jakarta] Tab: setor_bank
[23-Aug-2025 10:56:24 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:56:24 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:56:24 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:56:26 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:56:26 Asia/Jakarta] Tab: bank_history
[23-Aug-2025 10:56:26 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[23-Aug-2025 10:56:26 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:56:26 Asia/Jakarta] Result count: 36
[23-Aug-2025 10:56:45 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 10:56:45 Asia/Jakarta] Tab: terima
[23-Aug-2025 10:56:45 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 10:56:45 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 10:56:45 Asia/Jakarta] Result count: 0
[23-Aug-2025 10:58:58 Asia/Jakarta] Found 3 available closing transactions for cabang: FIT MOTOR TRAYEMAN
[23-Aug-2025 11:07:04 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 11:07:10 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 11:07:10 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 11:07:34 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 11:07:34 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: before_transaction_insert, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[23-Aug-2025 11:07:34 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: transaction_inserted_successfully, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[23-Aug-2025 07:05:26 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 07:05:30 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 07:05:51 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 07:05:55 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 07:07:58 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 14:09:06 Asia/Jakarta] Rekening filter: all
[23-Aug-2025 14:09:06 Asia/Jakarta] Tab: terima
[23-Aug-2025 14:09:06 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[23-Aug-2025 14:09:06 Asia/Jakarta] Params: Array
(
)

[23-Aug-2025 14:09:06 Asia/Jakarta] Result count: 0
[23-Aug-2025 07:10:12 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 07:11:20 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 07:11:44 UTC] PHP Fatal error:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1525 Incorrect DATE value: '' in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php:92
Stack trace:
#0 /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php(92): PDOStatement->execute()
#1 {main}
  thrown in /home/fitmotor/public_html/web_kasir/website_kasir/admin_dashboard.php on line 92
[23-Aug-2025 14:33:34 Asia/Jakarta] Found 4 available closing transactions for cabang: FIT MOTOR TRAYEMAN
[23-Aug-2025 15:04:51 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 15:05:01 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 15:05:01 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 15:06:09 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[23-Aug-2025 15:06:09 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: before_transaction_insert, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[23-Aug-2025 15:06:09 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: transaction_inserted_successfully, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[23-Aug-2025 16:05:32 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[23-Aug-2025 16:05:36 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[23-Aug-2025 16:05:36 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[23-Aug-2025 16:05:58 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[23-Aug-2025 16:05:58 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: before_transaction_insert, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[23-Aug-2025 16:05:58 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: transaction_inserted_successfully, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[23-Aug-2025 16:11:09 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[23-Aug-2025 16:11:17 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[23-Aug-2025 16:11:17 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[23-Aug-2025 16:13:40 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[23-Aug-2025 16:13:40 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: before_transaction_insert, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[23-Aug-2025 16:13:40 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: transaction_inserted_successfully, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[23-Aug-2025 16:37:38 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[23-Aug-2025 16:37:46 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[23-Aug-2025 16:37:46 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[23-Aug-2025 16:38:04 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[23-Aug-2025 16:38:04 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: before_transaction_insert, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[23-Aug-2025 16:38:04 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: transaction_inserted_successfully, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[24-Aug-2025 08:33:40 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:33:40 Asia/Jakarta] Tab: terima
[24-Aug-2025 08:33:40 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 08:33:40 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:33:40 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:33:43 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:33:43 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 08:33:43 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 08:33:43 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:33:43 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:34:00 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:34:00 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:34:00 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND kt.status = 'end proses' ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:34:00 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:34:00 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:34:14 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 08:34:14 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 08:34:14 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:34:14 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:34:14 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND kt.status = 'end proses' AND kt.deposit_status = ? ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:34:14 Asia/Jakarta] Params: Array
(
    [0] => Validasi Keuangan SELISIH
)

[24-Aug-2025 08:34:14 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:34:20 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 08:34:20 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 08:34:20 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:34:20 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:34:20 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND kt.status = 'end proses' AND kt.deposit_status = ? ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:34:20 Asia/Jakarta] Params: Array
(
    [0] => Validasi Keuangan OK
)

[24-Aug-2025 08:34:20 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:34:25 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:34:25 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:34:25 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND kt.status = 'end proses' ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:34:25 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:34:25 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:34:31 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:34:31 Asia/Jakarta] Tab: terima
[24-Aug-2025 08:34:31 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 08:34:31 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:34:31 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:34:35 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:34:35 Asia/Jakarta] Tab: validasi_selisih
[24-Aug-2025 08:34:35 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 08:34:35 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:34:35 Asia/Jakarta] Result count: 3
[24-Aug-2025 08:34:44 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:34:44 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 08:34:44 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 08:34:44 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:34:44 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:36:58 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:36:58 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 08:36:58 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 08:36:58 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:36:58 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:37:11 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:37:11 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:37:11 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND kt.status = 'end proses' ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:37:11 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:37:11 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:37:24 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 08:37:24 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 08:37:24 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:37:24 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:37:24 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND kt.status = 'end proses' ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:37:24 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 08:37:24 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:43:03 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 08:43:03 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 08:43:03 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:43:03 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:43:03 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND kt.status = 'end proses' AND kt.deposit_status = ? ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:43:03 Asia/Jakarta] Params: Array
(
    [0] => Validasi Keuangan SELISIH
)

[24-Aug-2025 08:43:03 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:43:33 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 08:43:33 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 08:43:33 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:43:33 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:43:33 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) AND kt.deposit_status = ? ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:43:33 Asia/Jakarta] Params: Array
(
    [0] => Validasi Keuangan SELISIH
)

[24-Aug-2025 08:43:33 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:43:38 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 08:43:38 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 08:43:38 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:43:38 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:43:38 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) AND kt.deposit_status = ? ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:43:38 Asia/Jakarta] Params: Array
(
    [0] => Validasi Keuangan SELISIH
)

[24-Aug-2025 08:43:38 Asia/Jakarta] Result count: 0
[24-Aug-2025 08:56:31 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 08:56:31 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 08:56:31 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 08:56:31 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 08:56:31 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) AND kt.deposit_status = ? ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 08:56:31 Asia/Jakarta] Params: Array
(
    [0] => Validasi Keuangan SELISIH
)

[24-Aug-2025 08:56:31 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:03:46 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:03:46 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:03:46 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:03:46 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:03:46 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:03:50 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:03:50 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:03:50 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:03:50 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:03:50 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:03:52 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:03:52 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:03:52 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:03:52 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:03:52 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:03:55 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:03:55 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:03:55 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:03:55 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:03:55 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:03:59 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:03:59 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:03:59 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:03:59 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:03:59 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:04:03 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:04:03 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:04:03 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:04:03 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:04:03 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:14:04 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:14:04 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:14:04 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:14:04 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:14:04 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:14:07 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:14:07 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:14:07 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:14:07 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:14:07 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:14:09 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:14:09 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:14:09 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:14:09 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:14:09 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:14:17 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:14:17 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:14:17 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:14:17 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:14:17 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:14:23 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:14:23 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:14:23 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:14:23 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:14:23 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:14:30 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:14:30 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 10:14:30 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:14:30 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:14:30 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:19:50 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:19:50 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:19:50 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:19:50 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:19:50 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:19:53 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:19:53 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:19:53 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:19:53 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:19:53 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:21:50 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:21:50 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:21:50 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:21:50 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:21:50 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:23:47 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:23:47 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:23:48 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:23:48 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:23:48 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:23:53 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:23:53 Asia/Jakarta] Tab: validasi_selisih
[24-Aug-2025 10:23:53 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 10:23:53 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:23:53 Asia/Jakarta] Result count: 3
[24-Aug-2025 10:24:32 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 10:24:32 Asia/Jakarta] POST keys: Array
(
    [0] => transaksi_id
    [1] => alasan_kembalikan
    [2] => kembalikan_ke_cs
)

[24-Aug-2025 10:24:32 Asia/Jakarta] KEMBALIKAN KE CS CLOSING: Transaksi closing dikembalikan: TRX-20250810-WO0001 ke CS NISRINA ARDEA NUR ASSYIFA - Cabang FIT MOTOR ADIWERNA. Alasan: selisih 1.800.000
[24-Aug-2025 10:24:32 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:24:32 Asia/Jakarta] Tab: validasi_selisih
[24-Aug-2025 10:24:32 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 10:24:32 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:24:32 Asia/Jakarta] Result count: 2
[24-Aug-2025 10:24:54 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 10:24:54 Asia/Jakarta] POST keys: Array
(
    [0] => transaksi_id
    [1] => alasan_kembalikan
    [2] => kembalikan_ke_cs
)

[24-Aug-2025 10:24:54 Asia/Jakarta] KEMBALIKAN KE CS CLOSING: Transaksi closing dikembalikan: TRX-20250806-WN0001 ke CS FATIMAH AZZAHRO - Cabang FIT MOTOR CIKDITIRO. Alasan: selisih 1.010.000
[24-Aug-2025 10:24:54 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:24:54 Asia/Jakarta] Tab: validasi_selisih
[24-Aug-2025 10:24:54 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 10:24:54 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:24:54 Asia/Jakarta] Result count: 1
[24-Aug-2025 10:25:17 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 10:25:17 Asia/Jakarta] POST keys: Array
(
    [0] => transaksi_id
    [1] => alasan_kembalikan
    [2] => kembalikan_ke_cs
)

[24-Aug-2025 10:25:17 Asia/Jakarta] KEMBALIKAN KE CS CLOSING: Transaksi closing dikembalikan: TRX-20250725-BQC0001 ke CS INDRI AFRIYANTI - Cabang FIT MOTOR TRAYEMAN. Alasan: selisih 1.300.000
[24-Aug-2025 10:25:17 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:25:17 Asia/Jakarta] Tab: validasi_selisih
[24-Aug-2025 10:25:17 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Validasi Keuangan SELISIH' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 10:25:17 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:25:17 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:29:02 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:29:37 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:29:40 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:31:07 Asia/Jakarta] UPDATE kasir_transactions - Affected rows: 1 for transaction: TRX-20250725-BQC0001
[24-Aug-2025 10:31:31 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:37:02 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:37:02 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:37:02 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:37:02 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:37:02 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:38:07 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:38:07 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 10:38:07 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:38:07 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:38:07 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:38:28 Asia/Jakarta] Rekening filter: 1,11
[24-Aug-2025 10:38:28 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 10:38:28 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[24-Aug-2025 10:38:28 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:38:28 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[24-Aug-2025 10:38:28 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:38:39 Asia/Jakarta] Rekening filter: 3
[24-Aug-2025 10:38:39 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 10:38:39 Asia/Jakarta] Adding rekening filter with IDs: 3
[24-Aug-2025 10:38:39 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:38:39 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[24-Aug-2025 10:38:39 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:38:50 Asia/Jakarta] Rekening filter: 4
[24-Aug-2025 10:38:50 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 10:38:50 Asia/Jakarta] Adding rekening filter with IDs: 4
[24-Aug-2025 10:38:50 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:38:50 Asia/Jakarta] Params: Array
(
    [0] => 4
)

[24-Aug-2025 10:38:50 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:42:48 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:42:48 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:42:48 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:42:48 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:42:48 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:42:48 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:42:48 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:42:48 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:42:48 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:42:48 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:42:51 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:42:51 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 10:42:51 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:42:51 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:42:51 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:44:16 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:44:16 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:44:16 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:44:16 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:44:16 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:44:37 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 10:44:37 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => cabang
    [4] => status_filter
)

[24-Aug-2025 10:44:37 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:44:37 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:44:37 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) AND kt.tanggal_transaksi BETWEEN ? AND ? ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:44:37 Asia/Jakarta] Params: Array
(
    [0] => 2025-08-01
    [1] => 2025-08-24
)

[24-Aug-2025 10:44:37 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:45:12 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:45:12 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 10:45:12 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 10:45:12 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:45:12 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:45:23 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:45:23 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:45:23 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:45:23 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:45:23 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:45:34 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:45:34 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:45:34 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:45:34 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:45:34 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:46:58 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:46:58 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 10:46:58 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 10:46:58 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:46:58 Asia/Jakarta] Result count: 36
[24-Aug-2025 10:47:24 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:47:24 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:47:24 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:47:24 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:47:24 Asia/Jakarta] Result count: 0
[24-Aug-2025 10:56:42 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:56:49 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:57:36 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:57:38 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 10:57:45 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:57:45 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:57:45 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:57:45 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:57:45 Asia/Jakarta] Result count: 1
[24-Aug-2025 10:58:12 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 10:58:12 Asia/Jakarta] POST keys: Array
(
    [0] => terima_setoran
    [1] => setoran_ids
)

[24-Aug-2025 10:58:12 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 10:58:12 Asia/Jakarta] Tab: terima
[24-Aug-2025 10:58:12 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 10:58:12 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 10:58:12 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:00:04 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:00:04 Asia/Jakarta] Tab: terima
[24-Aug-2025 11:00:05 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:00:05 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:00:05 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:00:08 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:00:08 Asia/Jakarta] Tab: validasi
[24-Aug-2025 11:00:09 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 11:00:09 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:00:09 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:00:16 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:00:16 Asia/Jakarta] Tab: terima
[24-Aug-2025 11:00:16 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:00:16 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:00:16 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:01:16 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:01:16 Asia/Jakarta] Tab: validasi
[24-Aug-2025 11:01:16 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 11:01:16 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:01:16 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:01:16 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:01:16 Asia/Jakarta] Tab: validasi
[24-Aug-2025 11:01:16 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 11:01:16 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:01:16 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:03:17 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:03:17 Asia/Jakarta] Tab: validasi
[24-Aug-2025 11:03:17 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 11:03:17 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:03:17 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:03:21 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 11:03:21 Asia/Jakarta] POST keys: Array
(
    [0] => transaksi_id
    [1] => jumlah_diterima
    [2] => catatan_validasi
    [3] => validasi_individual
)

[24-Aug-2025 11:03:21 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:03:21 Asia/Jakarta] Tab: validasi
[24-Aug-2025 11:03:21 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 11:03:21 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:03:21 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:03:27 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:03:27 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:03:27 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:03:27 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:03:27 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:03:47 Asia/Jakarta] Rekening filter: 1,11
[24-Aug-2025 11:03:47 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:03:47 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[24-Aug-2025 11:03:47 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:03:47 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[24-Aug-2025 11:03:47 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:09:20 Asia/Jakarta] Rekening filter: 3
[24-Aug-2025 11:09:20 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:09:20 Asia/Jakarta] Adding rekening filter with IDs: 3
[24-Aug-2025 11:09:20 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:09:20 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[24-Aug-2025 11:09:20 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:09:40 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:09:40 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:09:40 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:09:40 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:09:40 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:09:52 Asia/Jakarta] Rekening filter: 1,11
[24-Aug-2025 11:09:52 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:09:52 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[24-Aug-2025 11:09:52 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:09:52 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[24-Aug-2025 11:09:52 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:10:30 Asia/Jakarta] Rekening filter: 3
[24-Aug-2025 11:10:30 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:10:30 Asia/Jakarta] Adding rekening filter with IDs: 3
[24-Aug-2025 11:10:30 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:10:30 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[24-Aug-2025 11:10:30 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:10:47 Asia/Jakarta] Rekening filter: 1,11
[24-Aug-2025 11:10:47 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:10:47 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[24-Aug-2025 11:10:47 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:10:47 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[24-Aug-2025 11:10:47 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:12:06 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:12:06 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 11:12:06 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 11:12:06 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:12:06 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:14:54 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:14:54 Asia/Jakarta] Tab: terima
[24-Aug-2025 11:14:54 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:14:54 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:14:54 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:14:55 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:14:55 Asia/Jakarta] Tab: terima
[24-Aug-2025 11:14:55 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:14:55 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:14:55 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:15:02 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:15:02 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:15:02 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:15:02 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:15:02 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:15:45 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:15:45 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:15:45 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:15:45 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:15:45 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:16:33 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:16:33 Asia/Jakarta] Tab: terima
[24-Aug-2025 11:16:33 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:16:33 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:16:33 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:16:37 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:16:37 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:16:37 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:16:37 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:16:37 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:16:39 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:16:39 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:16:39 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:16:39 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:16:39 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:19:14 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:19:14 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:19:14 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:19:14 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:19:14 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:19:20 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:19:20 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:19:20 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:19:20 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:19:20 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:21:57 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:21:57 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:21:57 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:21:57 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:21:57 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:22:31 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:22:31 Asia/Jakarta] Tab: terima
[24-Aug-2025 11:22:31 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:22:31 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:22:31 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:22:38 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:22:38 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:22:38 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:22:38 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:22:38 Asia/Jakarta] Result count: 1
[24-Aug-2025 11:22:45 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:22:45 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:22:45 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:22:45 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:22:45 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:24:37 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:24:37 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:24:37 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:24:37 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:24:37 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:24:54 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:24:54 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:24:54 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:24:54 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:24:54 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:25:18 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:25:18 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 11:25:18 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 11:25:18 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:25:18 Asia/Jakarta] Result count: 36
[24-Aug-2025 11:27:41 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:27:41 Asia/Jakarta] Tab: monitoring
[24-Aug-2025 11:27:41 Asia/Jakarta] Query: 
        SELECT 
            kt.id,
            kt.kode_transaksi,
            kt.tanggal_transaksi,
            kt.tanggal_closing,
            kt.jam_closing,
            kt.setoran_real,
            kt.deposit_status,
            kt.kode_setoran,
            kt.nama_cabang,
            kt.validasi_at,
            kt.catatan_validasi,
            kt.jumlah_diterima_fisik,
            COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
            sk.tanggal_setoran,
            sk.status as setoran_status,
            -- Bank deposit information
            sb.id as setor_bank_id,
            sb.tanggal_setoran as tanggal_setor_bank,
            sb.total_setoran as total_setor_bank,
            sb.rekening_tujuan as bank_account,
            sb.metode_setoran,
            sb.bukti_transfer,
            sb.created_at as bank_created_at,
            sb.created_by as bank_created_by,
            -- Check if it's a closing transaction
            CASE 
                WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'CLOSING'
                WHEN EXISTS (
                    SELECT 1 FROM pemasukan_kasir pk 
                    WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                ) THEN 'DARI_CLOSING'
                ELSE 'REGULER'
            END as jenis_transaksi,
            -- Get selisih if available
            CASE 
                WHEN kt.jumlah_diterima_fisik IS NOT NULL 
                THEN (kt.setoran_real - kt.jumlah_diterima_fisik) 
                ELSE 0 
            END as selisih_fisik
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON kt.kode_karyawan = u.kode_karyawan
        LEFT JOIN setoran_ke_bank_detail sbd ON sk.id = sbd.setoran_keuangan_id
        LEFT JOIN setoran_ke_bank sb ON sbd.setoran_ke_bank_id = sb.id
        WHERE (kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
               OR EXISTS (
                   SELECT 1 FROM pemasukan_kasir pk 
                   WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
               ))
        AND (kt.status = 'end proses' 
             OR kt.deposit_status IN ('Validasi Keuangan OK', 'Validasi Keuangan SELISIH', 'Sedang Dibawa Kurir', 'Diterima Staff Keuangan', 'Dikembalikan ke CS', 'Sudah Disetor ke Bank')) ORDER BY 
        CASE kt.deposit_status 
            WHEN 'Sedang Dibawa Kurir' THEN 1
            WHEN 'Diterima Staff Keuangan' THEN 2
            WHEN 'Validasi Keuangan SELISIH' THEN 3
            WHEN 'Validasi Keuangan OK' THEN 4
            WHEN 'Dikembalikan ke CS' THEN 5
            WHEN 'Sudah Disetor ke Bank' THEN 6
            ELSE 7
        END,
        kt.tanggal_transaksi DESC, kt.jam_closing DESC
[24-Aug-2025 11:27:41 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:27:41 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:41:17 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:41:17 Asia/Jakarta] Tab: terima
[24-Aug-2025 11:41:17 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:41:17 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:41:17 Asia/Jakarta] Result count: 0
[24-Aug-2025 11:41:18 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 11:41:18 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 11:41:18 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 11:41:18 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 11:41:18 Asia/Jakarta] Result count: 1
[24-Aug-2025 12:14:30 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:14:30 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 12:14:30 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 12:14:30 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:14:30 Asia/Jakarta] Result count: 1
[24-Aug-2025 12:20:38 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 12:22:53 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:22:53 Asia/Jakarta] Tab: terima
[24-Aug-2025 12:22:53 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 12:22:53 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:22:53 Asia/Jakarta] Result count: 0
[24-Aug-2025 12:24:56 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:24:56 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 12:24:56 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 12:24:56 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:24:56 Asia/Jakarta] Result count: 36
[24-Aug-2025 12:25:30 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:25:30 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 12:25:30 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 12:25:30 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:25:30 Asia/Jakarta] Result count: 36
[24-Aug-2025 12:33:37 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 12:33:39 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 12:34:06 Asia/Jakarta] UPDATE kasir_transactions - Affected rows: 1 for transaction: TRX-20250806-WN0001
[24-Aug-2025 12:35:15 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:35:15 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 12:35:15 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 12:35:15 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:35:15 Asia/Jakarta] Result count: 36
[24-Aug-2025 12:37:22 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 12:52:31 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:52:31 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 12:52:32 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 12:52:32 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:52:32 Asia/Jakarta] Result count: 1
[24-Aug-2025 12:52:37 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:52:37 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 12:52:37 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 12:52:37 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:52:37 Asia/Jakarta] Result count: 36
[24-Aug-2025 12:57:08 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:57:08 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 12:57:08 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 12:57:08 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:57:08 Asia/Jakarta] Result count: 36
[24-Aug-2025 12:59:42 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 12:59:42 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 12:59:42 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 12:59:42 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 12:59:42 Asia/Jakarta] Result count: 36
[24-Aug-2025 13:02:41 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 13:02:41 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 13:02:41 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 13:02:41 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 13:02:41 Asia/Jakarta] Result count: 36
[24-Aug-2025 13:07:16 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 13:07:16 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 13:07:17 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 13:07:17 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 13:07:17 Asia/Jakarta] Result count: 36
[24-Aug-2025 13:07:21 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 13:07:21 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 13:07:21 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 13:07:21 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 13:07:21 Asia/Jakarta] Result count: 36
[24-Aug-2025 13:07:26 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 13:07:26 Asia/Jakarta] Tab: bank_history
[24-Aug-2025 13:07:26 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[24-Aug-2025 13:07:26 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 13:07:26 Asia/Jakarta] Result count: 36
[24-Aug-2025 14:04:57 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:05:45 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:05:47 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:06:28 Asia/Jakarta] UPDATE kasir_transactions - Affected rows: 1 for transaction: TRX-20250810-WO0001
[24-Aug-2025 14:24:32 Asia/Jakarta] Found 3 available closing transactions for cabang: FIT MOTOR CIKDITIRO
[24-Aug-2025 14:31:33 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:31:51 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:31:52 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:33:04 Asia/Jakarta] Found 4 available closing transactions for cabang: FIT MOTOR ADIWERNA
[24-Aug-2025 14:33:20 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:41:59 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:42:13 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:42:13 Asia/Jakarta] Tab: terima
[24-Aug-2025 14:42:13 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:42:13 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:42:13 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:43:52 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 14:43:52 Asia/Jakarta] POST keys: Array
(
    [0] => terima_setoran
    [1] => setoran_ids
)

[24-Aug-2025 14:43:52 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:43:52 Asia/Jakarta] Tab: terima
[24-Aug-2025 14:43:52 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:43:52 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:43:52 Asia/Jakarta] Result count: 0
[24-Aug-2025 14:47:48 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:48:00 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:48:00 Asia/Jakarta] Tab: terima
[24-Aug-2025 14:48:00 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:48:00 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:48:00 Asia/Jakarta] Result count: 0
[24-Aug-2025 14:48:03 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:48:03 Asia/Jakarta] Tab: validasi
[24-Aug-2025 14:48:03 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 14:48:03 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:48:03 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:48:12 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:48:12 Asia/Jakarta] Tab: validasi
[24-Aug-2025 14:48:12 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 14:48:12 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:48:12 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:48:43 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 14:48:43 Asia/Jakarta] POST keys: Array
(
    [0] => transaksi_id
    [1] => jumlah_diterima
    [2] => catatan_validasi
    [3] => validasi_individual
)

[24-Aug-2025 14:48:43 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:48:43 Asia/Jakarta] Tab: validasi
[24-Aug-2025 14:48:43 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 14:48:43 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:48:43 Asia/Jakarta] Result count: 0
[24-Aug-2025 14:48:45 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:48:45 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 14:48:45 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:48:45 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:48:45 Asia/Jakarta] Result count: 2
[24-Aug-2025 14:48:53 Asia/Jakarta] Rekening filter: 1,11
[24-Aug-2025 14:48:53 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 14:48:53 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[24-Aug-2025 14:48:53 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:48:53 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[24-Aug-2025 14:48:53 Asia/Jakarta] Result count: 2
[24-Aug-2025 14:49:59 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 14:49:59 Asia/Jakarta] POST keys: Array
(
    [0] => rekening_cabang_id
    [1] => tanggal_setoran
    [2] => setoran_ids
    [3] => setor_bank
)

[24-Aug-2025 14:49:59 Asia/Jakarta] SETOR BANK: POST data received
[24-Aug-2025 14:49:59 Asia/Jakarta] setoran_ids: Array
(
    [0] => 1075
)

[24-Aug-2025 14:49:59 Asia/Jakarta] rekening_cabang_id: 1,11
[24-Aug-2025 14:49:59 Asia/Jakarta] tanggal_setoran: 2025-08-11
[24-Aug-2025 14:49:59 Asia/Jakarta] SETOR BANK: Processing rekening_cabang_id: 1,11
[24-Aug-2025 14:49:59 Asia/Jakarta] SETOR BANK: First rekening ID: 1
[24-Aug-2025 14:50:00 Asia/Jakarta] SETOR BANK: Trigger temporarily disabled
[24-Aug-2025 14:50:00 Asia/Jakarta] SETOR BANK SUCCESS: Setoran ke bank berhasil dengan kode: BANK-2025-0037 | Rekening: Bank BCA - 0470931825 (NOVIAN / MEIKHA)
[24-Aug-2025 14:50:00 Asia/Jakarta] SETOR BANK: Trigger recreated after successful transaction
[24-Aug-2025 14:50:00 Asia/Jakarta] Rekening filter: 1,11
[24-Aug-2025 14:50:00 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 14:50:00 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[24-Aug-2025 14:50:00 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:50:00 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[24-Aug-2025 14:50:00 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:51:15 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 14:51:15 Asia/Jakarta] POST keys: Array
(
    [0] => rekening_cabang_id
    [1] => tanggal_setoran
    [2] => setoran_ids
    [3] => setor_bank
)

[24-Aug-2025 14:51:15 Asia/Jakarta] SETOR BANK: POST data received
[24-Aug-2025 14:51:15 Asia/Jakarta] setoran_ids: Array
(
    [0] => 1074
)

[24-Aug-2025 14:51:15 Asia/Jakarta] rekening_cabang_id: 1,11
[24-Aug-2025 14:51:15 Asia/Jakarta] tanggal_setoran: 2025-07-28
[24-Aug-2025 14:51:15 Asia/Jakarta] SETOR BANK: Processing rekening_cabang_id: 1,11
[24-Aug-2025 14:51:15 Asia/Jakarta] SETOR BANK: First rekening ID: 1
[24-Aug-2025 14:51:15 Asia/Jakarta] SETOR BANK: Trigger temporarily disabled
[24-Aug-2025 14:51:15 Asia/Jakarta] SETOR BANK SUCCESS: Setoran ke bank berhasil dengan kode: BANK-2025-0038 | Rekening: Bank BCA - 0470931825 (NOVIAN / MEIKHA)
[24-Aug-2025 14:51:15 Asia/Jakarta] SETOR BANK: Trigger recreated after successful transaction
[24-Aug-2025 14:51:15 Asia/Jakarta] Rekening filter: 1,11
[24-Aug-2025 14:51:15 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 14:51:15 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[24-Aug-2025 14:51:15 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:51:15 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[24-Aug-2025 14:51:15 Asia/Jakarta] Result count: 0
[24-Aug-2025 14:52:19 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:52:45 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[24-Aug-2025 14:53:14 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:53:14 Asia/Jakarta] Tab: terima
[24-Aug-2025 14:53:14 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:53:14 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:53:14 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:53:46 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 14:53:46 Asia/Jakarta] POST keys: Array
(
    [0] => terima_setoran
    [1] => setoran_ids
)

[24-Aug-2025 14:53:46 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:53:46 Asia/Jakarta] Tab: terima
[24-Aug-2025 14:53:46 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:53:46 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:53:46 Asia/Jakarta] Result count: 0
[24-Aug-2025 14:54:18 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:54:18 Asia/Jakarta] Tab: validasi
[24-Aug-2025 14:54:18 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 14:54:18 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:54:18 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:54:49 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:54:49 Asia/Jakarta] Tab: validasi
[24-Aug-2025 14:54:49 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 14:54:49 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:54:49 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:56:02 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 14:56:02 Asia/Jakarta] POST keys: Array
(
    [0] => transaksi_id
    [1] => jumlah_diterima
    [2] => catatan_validasi
    [3] => validasi_individual
)

[24-Aug-2025 14:56:02 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:56:02 Asia/Jakarta] Tab: validasi
[24-Aug-2025 14:56:02 Asia/Jakarta] Query: 
        SELECT kt.*, sk.nama_cabang, sk.tanggal_setoran, sk.nama_pengantar, 
               COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan,
               CASE 
                   WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 'DARI CLOSING'
                   WHEN EXISTS (
                       SELECT 1 FROM pemasukan_kasir pk 
                       WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                   ) THEN 'DARI CLOSING'
                   ELSE 'TRANSAKSI BIASA'
               END as jenis_transaksi,
               -- TAMBAHAN: Informasi closing gabungan
               pk.jumlah as jumlah_pemasukan_closing,
               pk.keterangan_transaksi as keterangan_closing,
               (SELECT COUNT(*) FROM kasir_transactions kt2 
                WHERE kt2.kode_setoran = kt.kode_setoran 
                AND (kt2.kode_transaksi LIKE '%CLOSING%' OR kt2.kode_transaksi LIKE '%CLO%'
                     OR EXISTS (
                         SELECT 1 FROM pemasukan_kasir pk2 
                         WHERE pk2.nomor_transaksi_closing = kt2.kode_transaksi
                     ))) as total_closing_in_setoran
        FROM kasir_transactions kt
        LEFT JOIN setoran_keuangan sk ON kt.kode_setoran = sk.kode_setoran
        LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
        LEFT JOIN pemasukan_kasir pk ON pk.nomor_transaksi_closing = kt.kode_transaksi
        WHERE kt.deposit_status = 'Diterima Staff Keuangan' ORDER BY 
        CASE 
            WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' THEN 0
            WHEN EXISTS (
                SELECT 1 FROM pemasukan_kasir pk3 
                WHERE pk3.nomor_transaksi_closing = kt.kode_transaksi
            ) THEN 0
            ELSE 1
        END,
        sk.tanggal_setoran DESC, kt.tanggal_transaksi DESC
[24-Aug-2025 14:56:02 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:56:02 Asia/Jakarta] Result count: 0
[24-Aug-2025 14:56:05 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 14:56:05 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 14:56:05 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:56:05 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 14:56:05 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:56:10 Asia/Jakarta] Rekening filter: 3
[24-Aug-2025 14:56:10 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 14:56:10 Asia/Jakarta] Adding rekening filter with IDs: 3
[24-Aug-2025 14:56:10 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:56:10 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[24-Aug-2025 14:56:10 Asia/Jakarta] Result count: 1
[24-Aug-2025 14:56:21 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[24-Aug-2025 14:56:21 Asia/Jakarta] POST keys: Array
(
    [0] => rekening_cabang_id
    [1] => tanggal_setoran
    [2] => setoran_ids
    [3] => setor_bank
)

[24-Aug-2025 14:56:21 Asia/Jakarta] SETOR BANK: POST data received
[24-Aug-2025 14:56:21 Asia/Jakarta] setoran_ids: Array
(
    [0] => 1076
)

[24-Aug-2025 14:56:21 Asia/Jakarta] rekening_cabang_id: 3
[24-Aug-2025 14:56:21 Asia/Jakarta] tanggal_setoran: 2025-08-07
[24-Aug-2025 14:56:21 Asia/Jakarta] SETOR BANK: Processing rekening_cabang_id: 3
[24-Aug-2025 14:56:21 Asia/Jakarta] SETOR BANK: First rekening ID: 3
[24-Aug-2025 14:56:22 Asia/Jakarta] SETOR BANK: Trigger temporarily disabled
[24-Aug-2025 14:56:22 Asia/Jakarta] SETOR BANK SUCCESS: Setoran ke bank berhasil dengan kode: BANK-2025-0039 | Rekening: Bank BCA - 0471627347 (NOVIAN / HARSONO)
[24-Aug-2025 14:56:22 Asia/Jakarta] SETOR BANK: Trigger recreated after successful transaction
[24-Aug-2025 14:56:22 Asia/Jakarta] Rekening filter: 3
[24-Aug-2025 14:56:22 Asia/Jakarta] Tab: setor_bank
[24-Aug-2025 14:56:22 Asia/Jakarta] Adding rekening filter with IDs: 3
[24-Aug-2025 14:56:22 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 14:56:22 Asia/Jakarta] Params: Array
(
    [0] => 3
)

[24-Aug-2025 14:56:22 Asia/Jakarta] Result count: 0
[24-Aug-2025 15:18:14 Asia/Jakarta] Rekening filter: all
[24-Aug-2025 15:18:14 Asia/Jakarta] Tab: terima
[24-Aug-2025 15:18:14 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[24-Aug-2025 15:18:14 Asia/Jakarta] Params: Array
(
)

[24-Aug-2025 15:18:14 Asia/Jakarta] Result count: 0
[24-Aug-2025 15:26:35 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[24-Aug-2025 15:26:41 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: verifikasi_kas_awal_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[24-Aug-2025 15:26:41 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[24-Aug-2025 15:27:41 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: kasir_dashboard_access, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: session
[24-Aug-2025 15:27:41 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: before_transaction_insert, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[24-Aug-2025 15:27:41 Asia/Jakarta] Branch Data - Karyawan: 2022020001, Action: transaction_inserted_successfully, Kode: 202505001, Nama: FIT MOTOR TRAYEMAN, Valid: YES, Source: NONE
[24-Aug-2025 16:03:23 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[24-Aug-2025 16:03:35 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: verifikasi_kas_awal_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[24-Aug-2025 16:03:35 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[24-Aug-2025 16:07:08 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: kasir_dashboard_access, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: session
[24-Aug-2025 16:07:08 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: before_transaction_insert, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[24-Aug-2025 16:07:08 Asia/Jakarta] Branch Data - Karyawan: 2023080001, Action: transaction_inserted_successfully, Kode: 201809001, Nama: FIT MOTOR PACUL, Valid: YES, Source: NONE
[24-Aug-2025 16:14:02 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[24-Aug-2025 16:14:09 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: verifikasi_kas_awal_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[24-Aug-2025 16:14:09 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[24-Aug-2025 16:14:46 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: kasir_dashboard_access, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: session
[24-Aug-2025 16:14:46 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: before_transaction_insert, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[24-Aug-2025 16:14:46 Asia/Jakarta] Branch Data - Karyawan: 2025050002, Action: transaction_inserted_successfully, Kode: 201601001, Nama: FIT MOTOR ADIWERNA, Valid: YES, Source: NONE
[24-Aug-2025 16:47:20 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[24-Aug-2025 16:47:24 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: verifikasi_kas_awal_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[24-Aug-2025 16:47:24 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[24-Aug-2025 16:47:44 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: kasir_dashboard_access, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: session
[24-Aug-2025 16:47:44 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: before_transaction_insert, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[24-Aug-2025 16:47:44 Asia/Jakarta] Branch Data - Karyawan: 2025050001, Action: transaction_inserted_successfully, Kode: 202201001, Nama: FIT MOTOR CIKDITIRO, Valid: YES, Source: NONE
[25-Aug-2025 08:41:50 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:41:50 Asia/Jakarta] Tab: terima
[25-Aug-2025 08:41:50 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 08:41:50 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:41:50 Asia/Jakarta] Result count: 0
[25-Aug-2025 08:42:14 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:42:14 Asia/Jakarta] Tab: terima
[25-Aug-2025 08:42:14 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 08:42:14 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:42:14 Asia/Jakarta] Result count: 0
[25-Aug-2025 08:42:33 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:42:33 Asia/Jakarta] Tab: setor_bank
[25-Aug-2025 08:42:33 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 08:42:33 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:42:33 Asia/Jakarta] Result count: 0
[25-Aug-2025 08:43:39 Asia/Jakarta] Rekening filter: 1,11
[25-Aug-2025 08:43:39 Asia/Jakarta] Tab: setor_bank
[25-Aug-2025 08:43:39 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[25-Aug-2025 08:43:39 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 08:43:39 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[25-Aug-2025 08:43:39 Asia/Jakarta] Result count: 0
[25-Aug-2025 08:43:55 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:43:55 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 08:43:55 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 08:43:55 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:43:55 Asia/Jakarta] Result count: 39
[25-Aug-2025 08:44:30 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:44:30 Asia/Jakarta] Tab: terima
[25-Aug-2025 08:44:30 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 08:44:30 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:44:30 Asia/Jakarta] Result count: 0
[25-Aug-2025 08:44:30 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:44:30 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 08:44:30 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 08:44:30 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:44:30 Asia/Jakarta] Result count: 39
[25-Aug-2025 08:44:32 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:44:32 Asia/Jakarta] Tab: setor_bank
[25-Aug-2025 08:44:32 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 08:44:32 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:44:32 Asia/Jakarta] Result count: 0
[25-Aug-2025 08:45:47 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 08:45:47 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 08:45:47 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 08:45:47 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 08:45:47 Asia/Jakarta] Result count: 39
[25-Aug-2025 08:46:48 Asia/Jakarta] Rekening filter: 1,11
[25-Aug-2025 08:46:48 Asia/Jakarta] Tab: setor_bank
[25-Aug-2025 08:46:48 Asia/Jakarta] Adding rekening filter with IDs: 1,11
[25-Aug-2025 08:46:48 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' AND sk.kode_cabang IN (
            SELECT kode_cabang FROM master_rekening_cabang 
            WHERE id IN (?,?) AND status = 'active'
        ) ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 08:46:48 Asia/Jakarta] Params: Array
(
    [0] => 1
    [1] => 11
)

[25-Aug-2025 08:46:48 Asia/Jakarta] Result count: 0
[25-Aug-2025 09:08:37 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:08:37 Asia/Jakarta] Tab: terima
[25-Aug-2025 09:08:37 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 09:08:37 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:08:37 Asia/Jakarta] Result count: 0
[25-Aug-2025 09:08:39 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:08:39 Asia/Jakarta] Tab: setor_bank
[25-Aug-2025 09:08:39 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 09:08:39 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:08:39 Asia/Jakarta] Result count: 0
[25-Aug-2025 09:08:43 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:08:43 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 09:08:43 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 09:08:43 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:08:43 Asia/Jakarta] Result count: 39
[25-Aug-2025 09:17:34 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:17:34 Asia/Jakarta] Tab: terima
[25-Aug-2025 09:17:34 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 09:17:34 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:17:34 Asia/Jakarta] Result count: 0
[25-Aug-2025 09:17:35 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:17:35 Asia/Jakarta] Tab: terima
[25-Aug-2025 09:17:35 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Sedang Dibawa Kurir' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 09:17:35 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:17:35 Asia/Jakarta] Result count: 0
[25-Aug-2025 09:18:39 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:18:39 Asia/Jakarta] Tab: setor_bank
[25-Aug-2025 09:18:40 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 09:18:40 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:18:40 Asia/Jakarta] Result count: 0
[25-Aug-2025 09:18:40 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:18:40 Asia/Jakarta] Tab: setor_bank
[25-Aug-2025 09:18:40 Asia/Jakarta] Query: 
    SELECT sk.*, COALESCE(u.nama_karyawan, 'Unknown User') AS nama_karyawan
    FROM setoran_keuangan sk
    LEFT JOIN users u ON sk.kode_karyawan = u.kode_karyawan
    WHERE 1=1 AND sk.status = 'Validasi Keuangan OK' ORDER BY sk.tanggal_setoran DESC
[25-Aug-2025 09:18:40 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:18:40 Asia/Jakarta] Result count: 0
[25-Aug-2025 09:18:46 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 09:18:46 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 09:18:46 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 09:18:46 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 09:18:46 Asia/Jakarta] Result count: 39
[25-Aug-2025 09:27:42 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[25-Aug-2025 09:27:42 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => rekening_filter
)

[25-Aug-2025 09:27:42 Asia/Jakarta] Rekening filter: 3
[25-Aug-2025 09:27:42 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 09:27:42 Asia/Jakarta] Adding rekening filter for bank_history with patterns: Bank BCA - 0471627347
[25-Aug-2025 09:27:42 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 AND (sb.rekening_tujuan LIKE ?) GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 09:27:42 Asia/Jakarta] Params: Array
(
    [0] => Bank BCA - 0471627347%
)

[25-Aug-2025 09:27:42 Asia/Jakarta] Result count: 10
[25-Aug-2025 10:01:47 Asia/Jakarta] Rekening filter: all
[25-Aug-2025 10:01:47 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 10:01:47 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 10:01:47 Asia/Jakarta] Params: Array
(
)

[25-Aug-2025 10:01:47 Asia/Jakarta] Result count: 39
[25-Aug-2025 10:01:57 Asia/Jakarta] POST REQUEST received to setoran_keuangan.php
[25-Aug-2025 10:01:57 Asia/Jakarta] POST keys: Array
(
    [0] => tab_filter
    [1] => tanggal_awal
    [2] => tanggal_akhir
    [3] => rekening_filter
)

[25-Aug-2025 10:01:57 Asia/Jakarta] Rekening filter: 1,11
[25-Aug-2025 10:01:57 Asia/Jakarta] Tab: bank_history
[25-Aug-2025 10:01:57 Asia/Jakarta] Adding rekening filter for bank_history with patterns: Bank BCA - 0470931825
[25-Aug-2025 10:01:57 Asia/Jakarta] Query: 
        SELECT sb.*, 
               GROUP_CONCAT(DISTINCT c.nama_cabang) as cabang_names,
               COUNT(sbd.setoran_keuangan_id) as total_setoran_count,
               u.nama_karyawan as created_by_name,
               SUM(CASE WHEN kt.kode_transaksi LIKE '%CLOSING%' OR kt.kode_transaksi LIKE '%CLO%' 
                        OR EXISTS (
                            SELECT 1 FROM pemasukan_kasir pk 
                            WHERE pk.nomor_transaksi_closing = kt.kode_transaksi
                        ) THEN 1 ELSE 0 END) as total_closing_transactions
        FROM setoran_ke_bank sb
        JOIN setoran_ke_bank_detail sbd ON sb.id = sbd.setoran_ke_bank_id
        JOIN setoran_keuangan sk ON sbd.setoran_keuangan_id = sk.id
        JOIN cabang c ON sk.kode_cabang = c.kode_cabang
        LEFT JOIN users u ON sb.created_by = u.kode_karyawan
        LEFT JOIN kasir_transactions kt ON sk.kode_setoran = kt.kode_setoran
        WHERE 1=1 AND (sb.rekening_tujuan LIKE ?) GROUP BY sb.id ORDER BY sb.tanggal_setoran DESC
[25-Aug-2025 10:01:57 Asia/Jakarta] Params: Array
(
    [0] => Bank BCA - 0470931825%
)

[25-Aug-2025 10:01:57 Asia/Jakarta] Result count: 21
[25-Aug-2025 10:19:07 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[25-Aug-2025 10:19:39 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
[25-Aug-2025 10:19:40 Asia/Jakarta] PHP Warning:  Undefined variable $total_pages in /home/fitmotor/public_html/web_kasir/website_kasir/setoran_keuangan_cs.php on line 1352
